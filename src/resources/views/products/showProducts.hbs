<div class="paginationHeader">
    <a href="/">Trang chủ</a>/<a href="/products">Sản phẩm</a>/<p style="color:#555">{{products.name}}</p>
</div>
<div class="container mt-5">
    <div class="productsBody">
        <div class="slide_imgProducts">
            <div class="slide_column">
                <a class="oi oi-chevron-top"></a>
                <div class="list_img">
                    {{#each products.imageProducts}}
                    <div class="imgBox {{{checkActive @index}}}">
                        <img src="/img/products/{{this}}" alt="{{@index}}" class="slide_img">
                    </div>
                    {{/each}}
                </div>
                <a class="oi oi-chevron-bottom"></a>
            </div>
            <div class="slide_row">
                {{#each products.imageProducts}}
                <div class="imgBox">
                    <img src="/img/products/{{this}}" alt="{{@index}}" class="slide_img">
                </div>
                {{/each}}
                <div class="control_slide">
                    <a class="oi oi-chevron-left"></a>
                    <a class="oi oi-chevron-right"></a>
                </div>
            </div>
        </div>
        <div class="info_products">
            <h1 class="nameProdcuts">{{products.name}}</h1>
            <span class="stroke"></span>
            <p class="priceProducts">{{products.price}} đ</p>
            <span class="stroke"></span>
            <ul class="list_color">
                <h5 class="listHeading">Màu sắc:</h5>
                {{#each products.color}}
                <li class="colorProducts" value="{{this}}">{{this}}</li>
                {{/each}}
            </ul>
            <ul class="list_size">
                <h5 class="listHeading">Kích thước:</h5>
                {{#each products.size}}
                <li class="sizeProducts">{{this}}</li>
                {{/each}}
            </ul>
            <button type="button" class="btn btn-dark addCartProducts">Thêm vào giỏ hàng</button>
        </div>
    </div>
</div>

<script>
    var transition = 0
    function controlSlide(next, prev, length, element, type, length2, element2, type2) {
        const img_slideRow = [...document.querySelectorAll(`${element} .imgBox`)]
        const img_slideColumn = [...document.querySelectorAll(`${element2} .imgBox`)]
        document.querySelector(next).onclick = () => {
            transition = (transition + 1)
            if (transition >= img_slideRow.length - 1) {
                transition = img_slideRow.length - 1
            }
            transformSlide(img_slideRow, img_slideColumn, type, type2, length, length2)
        }
        document.querySelector(prev).onclick = () => {
            transition = (transition - 1)
            if (transition <= 0) {
                transition = 0
            }
            transformSlide(img_slideRow, img_slideColumn, type, type2, length, length2)
        }

        img_slideColumn.map(img => {
            transformSlide(img_slideRow, img_slideColumn, type, type2, length, length2)
            img.onclick = () => {
                transition = Number(img.children[0].alt)
                transformSlide(img_slideRow, img_slideColumn, type, type2, length, length2)
            }
        })

    }

    function transformSlide(list_imgRow, list_imgColumn, type, type2, length, length2) {
        list_imgRow.map(img => {
            img.style.transform = `translate${type}(-${transition * length}px)`
        })
        list_imgColumn.map(img => {
            list_imgColumn.length <= 3 ? '' : img.style.transform = `translate${type2}(-${transition * length2}px)`
            img.classList.remove('active');
            if (Number(img.children[0].alt) == transition) {
                img.classList.add('active')
            }
        })
    }

    controlSlide('.control_slide .oi-chevron-right', '.control_slide .oi-chevron-left', 635, '.slide_row', 'X', 110, '.slide_column', 'Y')
    controlSlide('.slide_column .oi-chevron-bottom', '.slide_column .oi-chevron-top', 635, '.slide_row', 'X', 110, '.slide_column', 'Y')

    function chooseType(element) {
        const listType = [...document.querySelectorAll(element)]
        listType.map((type, index) => {
            index == 0 ? type.classList.add('active') : ''
            type.onclick = () => {
                let active = document.querySelector(`${element}.active`)
                active ? active.classList.remove('active') : ''
                type.classList.add('active')
            }
        })
    }

    chooseType('.colorProducts')
    chooseType('.sizeProducts')

    const btn_addCart = document.querySelector('.addCartProducts')
    btn_addCart.onclick = () => {
        const nameProducts = document.querySelector('.nameProdcuts').innerText
        const priceProducts = document.querySelector('.priceProducts').innerText
        const colorProducts = document.querySelector('.colorProducts.active').innerText
        const sizeProducts = document.querySelector('.sizeProducts.active').innerText
        if (!localStorage.cart) {
            const cart = JSON.stringify([{
                name: nameProducts,
                price: priceProducts,
                color: colorProducts,
                size: sizeProducts,
                count: 1
            }])
            localStorage.cart = cart
        }
        else {
            const cart = JSON.parse(localStorage.cart)
            const checkCart = cart.filter((Cart, index) => {
                if (Cart.name == nameProducts && Cart.size == sizeProducts && Cart.color == colorProducts) {
                    return true
                }
            })

            if (checkCart.length != 0) {
                localStorage.cart = JSON.stringify(cart.map(Cart => {
                    if (Cart.name == nameProducts && Cart.size == sizeProducts && Cart.color == colorProducts) {
                        Cart.count ++
                    }
                    return Cart
                }))
            }
            else {
                cart.push({
                    name: nameProducts,
                    price: priceProducts,
                    color: colorProducts,
                    size: sizeProducts,
                    count: 1
                })
                localStorage.cart = JSON.stringify(cart)
            }
        }
    }

</script>